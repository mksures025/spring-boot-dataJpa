package com.te.cms.controller;

import com.te.cms.dto.AddressDTO;
import com.te.cms.dto.DepartmentDTO;
import com.te.cms.dto.StudentRegisterDTO;
import com.te.cms.entity.AddressType;
import com.te.cms.response.SuccessResponse;
import com.te.cms.service.StudentService;
import lombok.RequiredArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDateTime;
import java.util.List;

@RestController
@RequiredArgsConstructor
@RequestMapping("/api/cms")
public class StudentController {

	private final StudentService studentService;

	@GetMapping(path = "getRegister")
	public StudentRegisterDTO getRegister() {

		return StudentRegisterDTO.builder().studentId("").studentName("").studentName("")
				.address(List.of(AddressDTO.builder().city("").state("").addressType(AddressType.PERMANENT)
						.addressType(AddressType.TEMPORARY).build()))
				.department(DepartmentDTO.builder().DeptName("").build()).build();
	}

	@PostMapping(path = "save")
	public ResponseEntity<SuccessResponse> SaveStudent(@RequestBody StudentRegisterDTO studentRegisterDTO) {

		String studentId = studentService.saveData(studentRegisterDTO);
		return ResponseEntity.ok().body(SuccessResponse.builder().message("Data saved").data(studentId)
				.status(HttpStatus.OK).timestamp(LocalDateTime.now()).build());
	}

	@PutMapping(path = "update")
	public ResponseEntity<SuccessResponse> updateStudent(@RequestBody StudentRegisterDTO studentRegisterDTO) {

		String studentName = studentService.updateStudent(studentRegisterDTO);
		return ResponseEntity.ok().body(SuccessResponse.builder().message("Data Updated successful").data(studentName)
				.status(HttpStatus.OK).timestamp(LocalDateTime.now()).build());
	}

	
	@GetMapping(path = "fetchById")
	public String fetchById(@PathVariable String studentid) {
		
		StudentRegisterDTO studentRegisterDTO =studentService.fetchById(studentid);
		
		
		return null;

	}

}
