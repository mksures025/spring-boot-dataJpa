package com.te.cms.util;

import com.te.cms.dto.AddressDTO;
import com.te.cms.dto.DepartmentDTO;
import com.te.cms.dto.StudentRegisterDTO;
import com.te.cms.entity.Address;
import com.te.cms.entity.Department;
import com.te.cms.entity.Student;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class StudentUtil <T>{


    public static Student convertStudentDTOToEntity(StudentRegisterDTO studentRegisterDTO) {

        Student student=Student.builder()
                .studentAge(studentRegisterDTO.getStudentAge())
                .studentName(studentRegisterDTO.getStudentName())
                .studentId(studentRegisterDTO.getStudentId()).build();

       List<Address> addresses = studentRegisterDTO
               .getAddress().stream()
               .map(a->Address.builder().city(a.getCity()).state(a.getState())
                       .addressType(a.getAddressType()).student(student).build()).toList();

       Department department= Department.builder().DeptName(studentRegisterDTO.getDepartment()
                .getDeptName()).student(List.of(student)).build();

        student.setAddress(addresses);
        student.setDepartment(department);
        addresses.stream().forEach(a -> a.setStudent(student));

        return student;
    }

	public static StudentRegisterDTO ConvertEntityToDTO(Student student) {
		
		  StudentRegisterDTO studentRegisterDTO = StudentRegisterDTO.builder()
		  .studentId(student.getStudentId())
		  .studentName(student.getStudentName())
		  .studentAge(student.getStudentAge())
		  .build();
		
		  //Address object to address dto object
		List<AddressDTO>addressDTO=new ArrayList<AddressDTO>();
		
		for (Address address : student.getAddress()) {
			
			addressDTO.add(AddressDTO.builder()
					.city(address.getCity())
					.state(address.getState())
					.addressType(address.getAddressType()).build()); 
		}
		
		studentRegisterDTO.setAddress(addressDTO);
		
		// department object to departmentDto object
		DepartmentDTO departmentDTO = DepartmentDTO.builder().DeptName(student.getDepartment().getDeptName()).build();
		
		studentRegisterDTO.setDepartment(departmentDTO);
	
			
		return studentRegisterDTO;

		  
	}
}
